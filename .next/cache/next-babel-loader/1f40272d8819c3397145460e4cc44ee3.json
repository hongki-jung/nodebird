{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/ImagesZoom/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\nconst Overlay = styled.div`\n    position: fixed;\n    z-index:5000;\n    top:0,\n    right:0,\n    bottom:0;\n`;\nconst ImgWrapper = styled.div`\n    padding:32px;\n    text-align: center;\n\n    & img{\n        margin: 0 auto;\n        max-height: 750px;\n    }\n    \n    \n`;\nconst Indicator = styled.div`\n    text-align: center;\n    \n    & > div{\n        width: 75px;\n        height:30px;\n        line-height: 30px;\n        border-radius: 15px;\n        background: #313131;\n        display: inline-block;\n        text-align: center;\n        color: white;\n        font-size: 15px;\n    }\n\n`; // antd 컴포넌트를 스타일링 하는 경우\n\nconst CloseBtn = styled(CloseOutlined)`\n    position: absolute;\n    right:0;\n    top: 0;\n    padding: 15px;\n    line-height: 15px;\n    cursor: pointer;\n`;\nconst Header = styled.header`\n    height: 44px;\n    background: white;\n    position: relative;\n    padding: 0;\n    text-align: center;\n\n    & h1 {\n        margin: 0;\n        font-size: 17px;\n        color: #333;\n        line-height:44px;\n    }\n\n`;\nconst SlickWrapper = styled.div`\n\n    height: calc(100% -44px);\n    background:#090909;\n\n\n`; // Slick을 가져와 사용할 때 발생하는 문제들을 해결한다.\n// Slick을 가져오면 그 안에는 이미 여려 겹의 class들이 들어있어 \n//커스텀 스타일링 하는데 어려움이 있다 . 이때 Global을 사용하면 그 문제를 해결할 수 있다. \n\nconst Global = createGlobalStyle`\n    .slick-slide{\n        display: inline-block;\n    }\n`;\n\nconst ImagesZoom = ({\n  images,\n  onClose\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(0);\n  return __jsx(Overlay, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Global, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }), __jsx(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uC138\\uC774\\uBBF8\\uC9C0\"), __jsx(CloseBtn, {\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"X\")), __jsx(SlickWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, __jsx(Slick, {\n    initialSlide: 0 // 현재 슬라이드가 몇 인지, state에 저장해놔야 한다. \n    ,\n    afterChange: slide => setCurrentSlide(slide),\n    infinite: true,\n    arrows: false,\n    slidesToScroll: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, images.map(v => __jsx(ImgWrapper, {\n    key: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, __jsx(\"img\", {\n    src: v.src,\n    alt: v.src,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 33\n    }\n  })))))));\n};\n\nImagesZoom.propType = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/ImagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","styled","createGlobalStyle","CloseOutlined","Overlay","div","ImgWrapper","Indicator","CloseBtn","Header","header","SlickWrapper","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","propType","arrayOf","object","isRequired","func"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAGA,MAAMC,OAAO,GAAGH,MAAM,CAACI,GAAI;;;;;;CAA3B;AAQA,MAAMC,UAAU,GAAGL,MAAM,CAACI,GAAI;;;;;;;;;;CAA9B;AAaA,MAAME,SAAS,GAAGN,MAAM,CAACI,GAAI;;;;;;;;;;;;;;;CAA7B,C,CAkBA;;AACA,MAAMG,QAAQ,GAAGP,MAAM,CAACE,aAAD,CAAgB;;;;;;;CAAvC;AAUA,MAAMM,MAAM,GAAGR,MAAM,CAACS,MAAO;;;;;;;;;;;;;;CAA7B;AAiBA,MAAMC,YAAY,GAAGV,MAAM,CAACI,GAAI;;;;;;CAAhC,C,CAQA;AACA;AACA;;AACA,MAAMO,MAAM,GAAGV,iBAAkB;;;;CAAjC;;AAOA,MAAMW,UAAU,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAAuB;AACtC,QAAM;AAAA,OAACC,YAAD;AAAA,OAAcC;AAAd,MAAgCnB,QAAQ,CAAC,CAAD,CAA9C;AAEA,SACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,EAEI,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEiB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CAFJ,EAOI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AACI,IAAA,YAAY,EAAE,CADlB,CAEI;AAFJ;AAGI,IAAA,WAAW,EAAGG,KAAD,IAASD,eAAe,CAACC,KAAD,CAHzC;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,MAAM,EAAE,KALZ;AAMI,IAAA,cAAc,EAAE,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKJ,MAAM,CAACK,GAAP,CAAYC,CAAD,IACR,MAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,CAAC,CAACC,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAED,CAAC,CAACC,GAAZ;AAAiB,IAAA,GAAG,EAAED,CAAC,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADH,CARL,CADJ,CADJ,CAPJ,CADJ;AAgCH,CAnCD;;AAsCAR,UAAU,CAACS,QAAX,GAAqB;AACjBR,EAAAA,MAAM,EAACf,SAAS,CAACwB,OAAV,CAAkBxB,SAAS,CAACyB,MAA5B,EAAoCC,UAD1B;AAEjBV,EAAAA,OAAO,EAAEhB,SAAS,CAAC2B,IAAV,CAAeD;AAFP,CAArB;AAKA,eAAeZ,UAAf","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\n\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { CloseOutlined } from '@ant-design/icons';\n\n\nconst Overlay = styled.div`\n    position: fixed;\n    z-index:5000;\n    top:0,\n    right:0,\n    bottom:0;\n`;\n\nconst ImgWrapper = styled.div`\n    padding:32px;\n    text-align: center;\n\n    & img{\n        margin: 0 auto;\n        max-height: 750px;\n    }\n    \n    \n`;\n\n\nconst Indicator = styled.div`\n    text-align: center;\n    \n    & > div{\n        width: 75px;\n        height:30px;\n        line-height: 30px;\n        border-radius: 15px;\n        background: #313131;\n        display: inline-block;\n        text-align: center;\n        color: white;\n        font-size: 15px;\n    }\n\n`;\n\n\n// antd 컴포넌트를 스타일링 하는 경우\nconst CloseBtn = styled(CloseOutlined)`\n    position: absolute;\n    right:0;\n    top: 0;\n    padding: 15px;\n    line-height: 15px;\n    cursor: pointer;\n`;\n\n\nconst Header = styled.header`\n    height: 44px;\n    background: white;\n    position: relative;\n    padding: 0;\n    text-align: center;\n\n    & h1 {\n        margin: 0;\n        font-size: 17px;\n        color: #333;\n        line-height:44px;\n    }\n\n`;\n\n\nconst SlickWrapper = styled.div`\n\n    height: calc(100% -44px);\n    background:#090909;\n\n\n`;\n\n// Slick을 가져와 사용할 때 발생하는 문제들을 해결한다.\n// Slick을 가져오면 그 안에는 이미 여려 겹의 class들이 들어있어 \n//커스텀 스타일링 하는데 어려움이 있다 . 이때 Global을 사용하면 그 문제를 해결할 수 있다. \nconst Global = createGlobalStyle`\n    .slick-slide{\n        display: inline-block;\n    }\n`;\n\n\nconst ImagesZoom = ({ images, onClose })=>{\n    const [currentSlide,setCurrentSlide] =useState(0);\n\n    return(\n        <Overlay>\n            <Global />\n            <Header>\n                <h1>상세이미지</h1>\n                <CloseBtn onClick={onClose}>X</CloseBtn>\n            </Header>\n               \n            <SlickWrapper>\n                <div>\n                    <Slick \n                        initialSlide={0}\n                        // 현재 슬라이드가 몇 인지, state에 저장해놔야 한다. \n                        afterChange={(slide)=>setCurrentSlide(slide)}\n                        infinite\n                        arrows={false}\n                        slidesToScroll={1}\n                    >\n                        {images.map((v)=>(\n                            <ImgWrapper key={v.src}>\n                                <img src={v.src} alt={v.src} />\n                            </ImgWrapper>\n                        ))}\n\n\n                    </Slick>\n\n                </div>\n\n            </SlickWrapper>\n        </Overlay>\n    )\n}\n\n\nImagesZoom.propType ={\n    images:PropTypes.arrayOf(PropTypes.object).isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}