{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useState, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nconst PostForm = () => {\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const dispatch = useDispatch(); // 실제 DOM에 접근하기 위하여 ref를 사용한다. \n\n  const imageInput = useRef();\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  }, []);\n  const onSubmit = useCallback(() => {\n    console.log('addPost ', addPost); // addPost (객체) = ADD_POST ACTION을 실행시킨다.\n\n    dispatch(addPost);\n    setText('');\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    //ImageInput.current를 통해서  input에 접근할 수 있다.\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), \"  \", __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\"), \" \"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      distplay: 'inline=block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useState","useRef","Form","Input","Button","useSelector","useDispatch","addPost","PostForm","imagePaths","state","post","text","setText","dispatch","imageInput","onChangeText","e","target","value","onSubmit","console","log","onClickImageUpload","current","click","margin","float","map","v","distplay","width"],"mappings":"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","sourcesContent":["import React, {useCallback, useState, useRef} from 'react';\nimport {Form, Input, Button} from 'antd';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nconst PostForm = () =>{\n    const {imagePaths}= useSelector((state)=>state.post);\n    const [text, setText] = useState('');\n\n    const dispatch = useDispatch();\n\n    // 실제 DOM에 접근하기 위하여 ref를 사용한다. \n    const imageInput = useRef();\n\n    const onChangeText = useCallback((e)=>{\n        setText(e.target.value)\n    },[])\n\n    const onSubmit = useCallback(()=>{\n        console.log('addPost ',addPost)\n\n\n        // addPost (객체) = ADD_POST ACTION을 실행시킨다.\n        dispatch(addPost)\n        setText('');\n  \n    },[]);\n\n    const onClickImageUpload = useCallback(() =>{\n\n        //ImageInput.current를 통해서  input에 접근할 수 있다.\n        imageInput.current.click();\n\n    },[imageInput.current]);\n\n\n\n\n    return(\n        <Form style={{margin:'10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\n\n            <Input.TextArea \n            value={text}\n            onChange={onChangeText}\n            maxLength={140}\n            placeholder=\"어떤 신기한 일이 있었나요?\"\n            />\n\n            <div>\n                <input type=\"file\" multiple hidden ref={imageInput} />\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>  {/**이미지 업로드 */}\n\n                <Button type=\"primary\" style={{float:'right'}} htmlType=\"submit\">짹짹</Button> {/**게시글 작성*/}\n\n            </div>\n            <div>\n                {/*이미지를 업로드하면 imagePaths에 업로드한 이미지들의 경로가 들어간다.*/}\n                {imagePaths.map((v)=>(\n                    <div key={v} style={{distplay:'inline=block'}}>\n                        <img src={v} style={{width:'200px'}} alt={v}/>\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n\n                    </div>\n                ))}\n            </div>\n\n\n        </Form>\n    )\n\n\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}