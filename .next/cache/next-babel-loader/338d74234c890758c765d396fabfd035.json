{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths;\n\n  var _useState = useState(''),\n      text = _useState[0],\n      setText = _useState[1];\n\n  var dispatch = useDispatch();\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onSubmit = useCallback(function () {\n    console.log('addPost ', addPost); // addPost (객체) = ADD_POST ACTION을 실행시킨다.\n\n    dispatch(addPost);\n  }, []);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), \"  \", __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmltype: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\"), \" \"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        distplay: 'inline=block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: v,\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n\n_s(PostForm, \"ecduRBrj5BL2CkbdATiK7qbMOKM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/PostForm.js"],"names":["React","useCallback","useState","Form","Input","Button","useSelector","useDispatch","addPost","PostForm","state","post","imagePaths","text","setText","dispatch","onChangeText","e","target","value","onSubmit","console","log","margin","map","v","distplay","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAK;AAAA;;AAAA,qBACEH,WAAW,CAAC,UAACI,KAAD;AAAA,WAASA,KAAK,CAACC,IAAf;AAAA,GAAD,CADb;AAAA,MACXC,UADW,gBACXA,UADW;;AAAA,kBAEMV,QAAQ,CAAC,EAAD,CAFd;AAAA,MAEXW,IAFW;AAAA,MAELC,OAFK;;AAIlB,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEA,MAAMS,YAAY,GAAGf,WAAW,CAAC,UAACgB,CAAD,EAAK;AAClCH,IAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH,GAF+B,EAE9B,EAF8B,CAAhC;AAIA,MAAMC,QAAQ,GAAGnB,WAAW,CAAC,YAAI;AAC7BoB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAuBd,OAAvB,EAD6B,CAI7B;;AACAO,IAAAA,QAAQ,CAACP,OAAD,CAAR;AAGH,GAR2B,EAQ1B,EAR0B,CAA5B;AAUA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACe,MAAAA,MAAM,EAAC;AAAR,KAAb;AAAqC,IAAA,OAAO,EAAC,qBAA7C;AAAmE,IAAA,QAAQ,EAAEH,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,KAAK,EAAEP,IAAvB;AACA,IAAA,QAAQ,EAAEG,YADV;AAEA,IAAA,SAAS,EAAE,GAFX;AAGA,IAAA,WAAW,EAAC,wEAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,MAA3B;AAA4B,IAAA,MAAM,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAFJ,QAII,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,KAAK,EAAE;AAAC,eAAM;AAAP,KAA9B;AAA+C,IAAA,QAAQ,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,MARJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKJ,UAAU,CAACY,GAAX,CAAe,UAACC,CAAD;AAAA,WACZ;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAa,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAED,CAAV;AAAa,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC;AAAP,OAApB;AAAqC,MAAA,GAAG,EAAEF,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAFJ,CADY;AAAA,GAAf,CAFL,CAfJ,CADJ;AAkCH,CAtDD;;GAAMhB,Q;UACkBH,W,EAGHC,W;;;KAJfE,Q;AAwDN,eAAeA,QAAf","sourcesContent":["import React, {useCallback, useState} from 'react';\nimport {Form, Input, Button} from 'antd';\nimport {useSelector, useDispatch} from 'react-redux';\nimport { addPost } from '../reducers/post';\n\nconst PostForm = () =>{\n    const {imagePaths}= useSelector((state)=>state.post);\n    const [text, setText] = useState('');\n\n    const dispatch = useDispatch();\n\n    const onChangeText = useCallback((e)=>{\n        setText(e.target.value)\n    },[])\n\n    const onSubmit = useCallback(()=>{\n        console.log('addPost ',addPost)\n\n\n        // addPost (객체) = ADD_POST ACTION을 실행시킨다.\n        dispatch(addPost)\n\n  \n    },[])\n\n    return(\n        <Form style={{margin:'10px 0 20px'}} encType=\"multipart/form-data\" onFinish={onSubmit}>\n\n            <Input.TextArea value={text}\n            onChange={onChangeText}\n            maxLength={140}\n            placeholder=\"어떤 신기한 일이 있었나요?\"\n            />\n\n            <div>\n                <input type=\"file\" multiple hidden />\n                <Button>이미지 업로드</Button>  {/**이미지 업로드 */}\n\n                <Button type=\"primary\" style={{float:'right'}} htmltype=\"submit\">짹짹</Button> {/**게시글 작성*/}\n\n            </div>\n            <div>\n                {/*이미지를 업로드하면 imagePaths에 업로드한 이미지들의 경로가 들어간다.*/}\n                {imagePaths.map((v)=>(\n                    <div key={v} style={{distplay:'inline=block'}}>\n                        <img src={v} style={{width:'200px'}} alt={v}/>\n                        <div>\n                            <Button>제거</Button>\n                        </div>\n\n                    </div>\n                ))}\n            </div>\n\n\n        </Form>\n    )\n\n\n};\n\nexport default PostForm;"]},"metadata":{},"sourceType":"module"}