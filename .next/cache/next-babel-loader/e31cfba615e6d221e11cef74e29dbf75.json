{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/AppLayout.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // 프롭스 검사\n\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd'; // antd\n// Row 가로(전체 24개) , Col 세로 - 반응형 디자인에 사용된다.\n// 가로먼저 자르고 다음에 세로를 자른다.\n// 디자인 순서 모바일 -> 태블릿화면 -> 데스크탑\n// xs 모바일 , sm 태블릿 , md 작은 데스크탑 \n\nimport UserProfile from './UserProfile';\nimport LoginForm from './LoginForm';\nimport styled from 'styled-components'; // 이런식으로 Component도 커스텀하게 스타일링 해줄 수도 있다.\n\nconst SearchInput = styled(Input.Search)`\n    vertical-align: middle;\n`; // styled Component 방식이 싫을 경우??\n// useMemo를 사용한다. <- 값을 캐싱해준다.\n// 아래와 같이 해주고 useMemo를 추가해주면 \n// 리랜더링되더라도  객체가 유지된다.\n// const style = useMemo(()=>({margindTop:10}),[])\n//그다음에 사용하고자 하는 태그로 가서 style={style} 이런식으로 추가해주면 된다.\n// 특정 컴포넌트 끼리 공통인 건 AppLayout에 넣는다.\n//index.js , profile.js , signup.js 등이 공통적으로 쓸 레이아웃을 만든다!!\n// AppLayout으로 감싸지는 것들이 children이 된다.\n// index.js , profile.js , signup.js 등이 children이 된다.\n\nconst AppLayout = ({\n  children\n}) => {\n  const {\n    0: isLoggedIn,\n    1: setIsLoggedIn\n  } = useState(false); // return 부분이 Virtual Dom이다 !! \n  // 수정 전후return()을 비교해서 바뀐부분이 있으면 그부분만 수정해서 재랜더링한다.\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Menu, {\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 36\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 43\n    }\n  }, \"\\uD504\\uB85C\\uD544\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, __jsx(SearchInput, {\n    enterButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 42\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(Row, {\n    gutter: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"    \", __jsx(Col, {\n    xs: 24,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, isLoggedIn ? __jsx(UserProfile, {\n    setIsLoggedIn: setIsLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }) : __jsx(LoginForm, {\n    setIsLoggedIn: setIsLoggedIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 80\n    }\n  })), \"   \", __jsx(Col, {\n    xs: 24,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, children), \"  \", __jsx(Col, {\n    xs: 24,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"\\uC624\\uB978\\uCABD \\uBA54\\uB274 \", __jsx(\"a\", {\n    href: \"http://www.zerocho.com\",\n    target: \"_blacnk\",\n    rel: \"noreferrer noopener\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 28\n    }\n  }, \"Made by Hongki\")), \" \"));\n};\n\nAppLayout.propTypes = {\n  // children은 노드 타입이다 (리액트의 노드. 리턴안에 들어갈 수 있는 모든 것들이 노드)\n  children: PropTypes.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/AppLayout.js"],"names":["React","useState","PropTypes","Link","Menu","Input","Row","Col","UserProfile","LoginForm","styled","SearchInput","Search","AppLayout","children","isLoggedIn","setIsLoggedIn","propTypes","node","isRequired"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types'; // 프롭스 검사\nimport Link from 'next/link';\nimport {Menu, Input, Row, Col} from 'antd';\n\n\n// antd\n// Row 가로(전체 24개) , Col 세로 - 반응형 디자인에 사용된다.\n// 가로먼저 자르고 다음에 세로를 자른다.\n// 디자인 순서 모바일 -> 태블릿화면 -> 데스크탑\n// xs 모바일 , sm 태블릿 , md 작은 데스크탑 \n\n\nimport UserProfile from './UserProfile'\nimport LoginForm from './LoginForm'\nimport styled from 'styled-components';\n\n\n\n// 이런식으로 Component도 커스텀하게 스타일링 해줄 수도 있다.\nconst SearchInput =styled(Input.Search)`\n    vertical-align: middle;\n`;\n\n// styled Component 방식이 싫을 경우??\n// useMemo를 사용한다. <- 값을 캐싱해준다.\n// 아래와 같이 해주고 useMemo를 추가해주면 \n// 리랜더링되더라도  객체가 유지된다.\n// const style = useMemo(()=>({margindTop:10}),[])\n//그다음에 사용하고자 하는 태그로 가서 style={style} 이런식으로 추가해주면 된다.\n\n\n\n// 특정 컴포넌트 끼리 공통인 건 AppLayout에 넣는다.\n//index.js , profile.js , signup.js 등이 공통적으로 쓸 레이아웃을 만든다!!\n\n// AppLayout으로 감싸지는 것들이 children이 된다.\n// index.js , profile.js , signup.js 등이 children이 된다.\nconst AppLayout = ({children}) =>{\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    // return 부분이 Virtual Dom이다 !! \n    // 수정 전후return()을 비교해서 바뀐부분이 있으면 그부분만 수정해서 재랜더링한다.\n    return (\n        <div>\n            <Menu mode=\"horizontal\">\n\n                <Menu.Item>\n                    <Link href=\"/\"><a>노드버드</a></Link>\n                 </Menu.Item>\n\n                <Menu.Item>\n                    <Link href=\"/profile\"><a>프로필</a></Link>\n                </Menu.Item>\n\n                <Menu.Item>\n                    <SearchInput enterButton />\n                </Menu.Item>\n\n                <Menu.Item>\n                    <Link href=\"/signup\"><a>회원가입</a></Link>\n                </Menu.Item>\n       \n             \n             \n            </Menu>\n        \n            <Row gutter={8}>    {/* gutter 컬럼들 사이의 간격 */}\n\n                <Col xs={24} md={6}>\n                    {/* 로그인 되어있으면 사용자 프로필을 보여준다 그렇지 않으면 로그인폼을 보여준다. */}\n                  {isLoggedIn ? <UserProfile setIsLoggedIn={setIsLoggedIn}/> : <LoginForm setIsLoggedIn={setIsLoggedIn}/>}\n                </Col>   {/* 25% 차지*/}\n\n\n                <Col xs={24} md={12}>\n                    {children}\n                </Col>  {/* 50% 차지*/}\n\n\n                <Col xs={24} md={6}>   \n                    오른쪽 메뉴 <a href=\"http://www.zerocho.com\" target=\"_blacnk\" rel=\"noreferrer noopener\">Made by Hongki</a>\n                </Col> {/* 25% 차지*/}\n\n            </Row>\n\n    \n        </div>\n    )\n}\n\nAppLayout.propTypes = {\n    // children은 노드 타입이다 (리액트의 노드. 리턴안에 들어갈 수 있는 모든 것들이 노드)\n    children: PropTypes.node.isRequired,\n\n};\nexport default AppLayout\n"]},"metadata":{},"sourceType":"module"}