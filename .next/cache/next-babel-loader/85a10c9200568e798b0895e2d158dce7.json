{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    padding: 10px\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top:10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useinput';\nimport { useDispatch } from 'react-redux';\nimport { loginAction } from '../reducers/user'; // styled.div 하게 되면 ButtonWrapper는 div태그(div component)가 된다.\n\nvar ButtonWrapper = styled.div(_templateObject());\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2()); // const LoginForm = ({setIsLoggedIn}) => {\n\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  // Custom Hook 사용전 버전\n  // const [id, setId] = useState('');\n  // const [password, setPassword] = useState('')\n  // //  컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 사용한다.\n  // // 그래야 최적화가 된다. useCallback은 함수를 캐싱해준다.\n  // const onChangeId = useCallback((e)=>{    \n  //     setId(e.target.value)\n  // },[])\n  // const onChangePassword = useCallback((e)=>{    \n  //     setPassword(e.target.value)\n  // },[])\n  var dispatch = useDispatch(); //  Custom Hook 사용후 \n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      password = _useInput4[0],\n      onChangePassword = _useInput4[1];\n\n  var onSubmitForm = useCallback(function () {\n    console.log(id, password); // setIsLoggedIn(true);\n\n    dispatch(loginAction({\n      id: id,\n      password: password\n    }));\n  }, [id, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, \" \\uB85C\\uADF8\\uC778 \"), __jsx(Link, {\n    href: \"/signup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }));\n}; // LoginForm.propTypes={\n//     setIsLoggedIn: PropTypes.func.isRequired,\n// }\n\n\n_s(LoginForm, \"5vi9v7aZJ43ABJBVtqxLSJ0WPuQ=\", false, function () {\n  return [useDispatch, useInput, useInput];\n});\n\n_c3 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/LoginForm.js"],"names":["React","useCallback","Form","Input","Button","Link","styled","PropTypes","useInput","useDispatch","loginAction","ButtonWrapper","div","FormWrapper","LoginForm","dispatch","id","onChangeId","password","onChangePassword","onSubmitForm","console","log"],"mappings":"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","sourcesContent":["import React, { useCallback} from 'react';\nimport {Form, Input, Button} from 'antd';\nimport Link from 'next/link'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport useInput from '../hooks/useinput';\nimport {useDispatch} from 'react-redux';\n\nimport {loginAction} from '../reducers/user';\n\n\n// styled.div 하게 되면 ButtonWrapper는 div태그(div component)가 된다.\nconst ButtonWrapper = styled.div`\n    margin-top:10px;\n`;\n\n\n\n\nconst FormWrapper= styled(Form)`\n    padding: 10px\n`;\n\n\n// const LoginForm = ({setIsLoggedIn}) => {\n\nconst LoginForm = () => {\n\n    // Custom Hook 사용전 버전\n    // const [id, setId] = useState('');\n    // const [password, setPassword] = useState('')\n\n    // //  컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 사용한다.\n    // // 그래야 최적화가 된다. useCallback은 함수를 캐싱해준다.\n    // const onChangeId = useCallback((e)=>{    \n    //     setId(e.target.value)\n    // },[])\n\n\n    // const onChangePassword = useCallback((e)=>{    \n    //     setPassword(e.target.value)\n    // },[])\n\n\n\n    const dispatch = useDispatch();\n\n    //  Custom Hook 사용후 \n    const [id,onChangeId] = useInput('');\n    const [password,onChangePassword] = useInput('')\n\n\n\n\n\n\n    const onSubmitForm = useCallback(()=>{\n        console.log(id,password);\n        // setIsLoggedIn(true);\n        dispatch(loginAction({id,password}));\n    },[id,password]);\n\n\n\n    return(\n        <FormWrapper onFinish={onSubmitForm}>\n            {/* onFinish는 이미 preventDefault가 적용되어 있다.\n            submit이되면 onFinish가 호출된다.\n            */}\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <br />\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\n            </div>\n\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <Input name=\"user-password\"\n                 type=\"password\"\n                 value={password} \n                 onChange={onChangePassword} \n                 required />\n            </div>\n\n            <ButtonWrapper>\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}> 로그인 </Button>\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n            </ButtonWrapper>\n\n            <div>\n                \n            </div>\n        </FormWrapper>\n    )\n\n}\n\n\n// LoginForm.propTypes={\n//     setIsLoggedIn: PropTypes.func.isRequired,\n// }\n\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}