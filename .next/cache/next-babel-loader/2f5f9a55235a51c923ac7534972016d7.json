{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/AppLayout.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types'; // 프롭스 검사\n\nimport Link from 'next/link';\nimport { Menu, Input, Row, Col } from 'antd'; // antd\n// Row 가로(전체 24개) , Col 세로 - 반응형 디자인에 사용된다.\n// 가로먼저 자르고 다음에 세로를 자른다.\n// 디자인 순서 모바일 -> 태블릿화면 -> 데스크탑\n// xs 모바일 , sm 태블릿 , md 작은 데스크탑 \n// 특정 컴포넌트 끼리 공통인 건 AppLayout에 넣는다.\n// AppLayout으로 감싸지는 것들이 children이 된다.\n\nconst AppLayout = ({\n  children\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(Menu, {\n    mode: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 36\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 43\n    }\n  }, \"\\uD504\\uB85C\\uD544\"))), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(Input.Search, {\n    enterButton: true,\n    style: {\n      verticalAlign: 'middle'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })), __jsx(Menu.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 42\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    xs: 24,\n    xd: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), __jsx(Col, {\n    xs: 24,\n    xd: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), __jsx(Col, {\n    xs: 24,\n    xd: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  })), children);\n};\n\nAppLayout.propTypes = {\n  // children은 노드 타입이다 (리액트의 노드. 리턴안에 들어갈 수 있는 모든 것들이 노드)\n  children: PropTypes.node.isRequired\n};\nexport default AppLayout;","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/AppLayout.js"],"names":["React","PropTypes","Link","Menu","Input","Row","Col","AppLayout","children","verticalAlign","propTypes","node","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,GAArB,EAA0BC,GAA1B,QAAoC,MAApC,C,CAEA;AACA;AACA;AACA;AACA;AAMA;AAEA;;AACA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAC7B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAf,CADJ,CAFJ,EAMI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAtB,CADJ,CANJ,EAUI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAA0B,IAAA,KAAK,EAAE;AAACC,MAAAA,aAAa,EAAC;AAAf,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,EAcI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAArB,CADJ,CAdJ,CADJ,EAuBI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,EAAE,EAAE,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAvBJ,EA8BKD,QA9BL,CADJ;AAkCH,CAnCD;;AAqCAD,SAAS,CAACG,SAAV,GAAsB;AAClB;AACAF,EAAAA,QAAQ,EAAEP,SAAS,CAACU,IAAV,CAAeC;AAFP,CAAtB;AAKA,eAAeL,SAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'; // 프롭스 검사\nimport Link from 'next/link';\nimport {Menu, Input, Row, Col} from 'antd';\n\n// antd\n// Row 가로(전체 24개) , Col 세로 - 반응형 디자인에 사용된다.\n// 가로먼저 자르고 다음에 세로를 자른다.\n// 디자인 순서 모바일 -> 태블릿화면 -> 데스크탑\n// xs 모바일 , sm 태블릿 , md 작은 데스크탑 \n\n\n\n\n\n// 특정 컴포넌트 끼리 공통인 건 AppLayout에 넣는다.\n\n// AppLayout으로 감싸지는 것들이 children이 된다.\nconst AppLayout = ({children}) =>{\n    return (\n        <div>\n            <Menu mode=\"horizontal\">\n\n                <Menu.Item>\n                    <Link href=\"/\"><a>노드버드</a></Link>\n                 </Menu.Item>\n\n                <Menu.Item>\n                    <Link href=\"/profile\"><a>프로필</a></Link>\n                </Menu.Item>\n\n                <Menu.Item>\n                    <Input.Search enterButton style={{verticalAlign:'middle'}}/>\n                </Menu.Item>\n\n                <Menu.Item>\n                    <Link href=\"/signup\"><a>회원가입</a></Link>\n                </Menu.Item>\n       \n             \n             \n            </Menu>\n\n            <Row>\n                <Col xs={24} xd={6}/>\n                <Col xs={24} xd={12}/>\n                <Col xs={24} xd={6}/>\n            </Row>\n\n    \n            {children}\n        </div>\n    )\n}\n\nAppLayout.propTypes = {\n    // children은 노드 타입이다 (리액트의 노드. 리턴안에 들어갈 수 있는 모든 것들이 노드)\n    children: PropTypes.node.isRequired,\n\n};\nexport default AppLayout\n"]},"metadata":{},"sourceType":"module"}