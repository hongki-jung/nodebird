{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/ImagesZoom/index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    .slick-slide{\\n        display: inline-block;\\n    }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n\\n    height: calc(100% -44px);\\n    background:#090909;\\n\\n\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    position: absolute;\\n    right:0;\\n    top: 0;\\n    padding: 15px;\\n    line-height: 15px;\\n    cursor: pointer;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    height: 44px;\\n    background: white;\\n    position:relative;\\n    padding:0;\\n    text-align:center;\\n\\n    & h1{\\n        margin:0;\\n        font-size: 17px,\\n        color: #333,\\n        line-height: 44px;\\n    }\\n    \\n    \\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position: fixed;\\n    z-index:5000;\\n    top:0,\\n    right:0,\\n    bottom:0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport styled, { createGlobalStyle } from 'styled-components';\nvar Overlay = styled.div(_templateObject());\n_c = Overlay;\nvar Header = styled.header(_templateObject2()); // antd 컴포넌트를 스타일링 하는 경우\n\n_c2 = Header;\nvar CloseBtn = styled(CloseOutlined)(_templateObject3());\n_c3 = CloseBtn;\nvar SlickWrapper = styled.div(_templateObject4()); // Slick을 가져와 사용할 때 발생하는 문제들을 해결한다.\n// Slick을 가져오면 그 안에는 이미 여려 겹의 class들이 들어있어 \n//커스텀 스타일링 하는데 어려움이 있다 . 이때 Global을 사용하면 그 문제를 해결할 수 있다. \n\n_c4 = SlickWrapper;\nvar Global = createGlobalStyle(_templateObject5());\n_c5 = Global;\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  _s();\n\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      currentSlide = _useState[0],\n      setCurrentSlide = _useState[1];\n\n  return __jsx(Overlay, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(Global, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), __jsx(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"\\uC0C1\\uC138\\uC774\\uBBF8\\uC9C0\"), __jsx(CloseBtn, {\n    onClick: onClose,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, \"X\")), __jsx(SlickWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, __jsx(Slick, {\n    initialSlide: 0 // 현재 슬라이드가 몇 인지, state에 저장해놔야 한다. \n    ,\n    afterChange: function afterChange(slide) {\n      return setCurrentSlide(slide);\n    },\n    infinite: true,\n    arrows: false,\n    slidesToScroll: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, images.map(function (v) {\n    return __jsx(Imagewrapper, {\n      key: v.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 29\n      }\n    }, __jsx(\"img\", {\n      src: v.src,\n      alt: v.src,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }));\n  })))));\n};\n\n_s(ImagesZoom, \"sE4xlZhH97dGAc3DgtGOgBKnMZM=\");\n\n_c6 = ImagesZoom;\nImagesZoom.propType = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Overlay\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"CloseBtn\");\n$RefreshReg$(_c4, \"SlickWrapper\");\n$RefreshReg$(_c5, \"Global\");\n$RefreshReg$(_c6, \"ImagesZoom\");","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/ImagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","styled","createGlobalStyle","Overlay","div","Header","header","CloseBtn","CloseOutlined","SlickWrapper","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","propType","arrayOf","object","isRequired","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AAGA,IAAMC,OAAO,GAAGF,MAAM,CAACG,GAAV,mBAAb;KAAMD,O;AAQN,IAAME,MAAM,GAAGJ,MAAM,CAACK,MAAV,oBAAZ,C,CAiBA;;MAjBMD,M;AAkBN,IAAME,QAAQ,GAAGN,MAAM,CAACO,aAAD,CAAT,oBAAd;MAAMD,Q;AAaN,IAAME,YAAY,GAAGR,MAAM,CAACG,GAAV,oBAAlB,C,CAQA;AACA;AACA;;MAVMK,Y;AAWN,IAAMC,MAAM,GAAGR,iBAAH,oBAAZ;MAAMQ,M;;AAON,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAuB;AAAA;;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,OAAY,QAAZA,OAAY;;AAAA,kBACAf,QAAQ,CAAC,CAAD,CADR;AAAA,MAC/BgB,YAD+B;AAAA,MAClBC,eADkB;;AAGtC,SACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,EAEI,MAAC,QAAD;AAAU,IAAA,OAAO,EAAEF,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CAFJ,EAOI,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,KAAD;AACI,IAAA,YAAY,EAAE,CADlB,CAEI;AAFJ;AAGI,IAAA,WAAW,EAAE,qBAACG,KAAD;AAAA,aAASD,eAAe,CAACC,KAAD,CAAxB;AAAA,KAHjB;AAII,IAAA,QAAQ,MAJZ;AAKI,IAAA,MAAM,EAAE,KALZ;AAMI,IAAA,cAAc,EAAE,CANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKJ,MAAM,CAACK,GAAP,CAAW,UAACC,CAAD;AAAA,WACR,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEA,CAAC,CAACC,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAED,CAAC,CAACC,GAAZ;AAAiB,MAAA,GAAG,EAAED,CAAC,CAACC,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADQ;AAAA,GAAX,CARL,CADJ,CADJ,CAPJ,CADJ;AAgCH,CAnCD;;GAAMR,U;;MAAAA,U;AAsCNA,UAAU,CAACS,QAAX,GAAqB;AACjBR,EAAAA,MAAM,EAACb,SAAS,CAACsB,OAAV,CAAkBtB,SAAS,CAACuB,MAA5B,EAAoCC,UAD1B;AAEjBV,EAAAA,OAAO,EAAEd,SAAS,CAACyB,IAAV,CAAeD;AAFP,CAArB;AAKA,eAAeZ,UAAf","sourcesContent":["import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\n\nimport styled, { createGlobalStyle } from 'styled-components';\n\n\nconst Overlay = styled.div`\n    position: fixed;\n    z-index:5000;\n    top:0,\n    right:0,\n    bottom:0;\n`;\n\nconst Header = styled.header`\n    height: 44px;\n    background: white;\n    position:relative;\n    padding:0;\n    text-align:center;\n\n    & h1{\n        margin:0;\n        font-size: 17px,\n        color: #333,\n        line-height: 44px;\n    }\n    \n    \n`\n\n// antd 컴포넌트를 스타일링 하는 경우\nconst CloseBtn = styled(CloseOutlined)`\n    position: absolute;\n    right:0;\n    top: 0;\n    padding: 15px;\n    line-height: 15px;\n    cursor: pointer;\n`\n\n\n\n\n\nconst SlickWrapper = styled.div`\n\n    height: calc(100% -44px);\n    background:#090909;\n\n\n`\n\n// Slick을 가져와 사용할 때 발생하는 문제들을 해결한다.\n// Slick을 가져오면 그 안에는 이미 여려 겹의 class들이 들어있어 \n//커스텀 스타일링 하는데 어려움이 있다 . 이때 Global을 사용하면 그 문제를 해결할 수 있다. \nconst Global = createGlobalStyle`\n    .slick-slide{\n        display: inline-block;\n    }\n`;\n\n\nconst ImagesZoom = ({ images, onClose })=>{\n    const [currentSlide,setCurrentSlide] =useState(0);\n\n    return(\n        <Overlay>\n            <Global />\n            <Header>\n                <h1>상세이미지</h1>\n                <CloseBtn onClick={onClose}>X</CloseBtn>\n            </Header>\n               \n            <SlickWrapper>\n                <div>\n                    <Slick \n                        initialSlide={0}\n                        // 현재 슬라이드가 몇 인지, state에 저장해놔야 한다. \n                        afterChange={(slide)=>setCurrentSlide(slide)}\n                        infinite\n                        arrows={false}\n                        slidesToScroll={1}\n                    >\n                        {images.map((v)=>(\n                            <Imagewrapper key={v.src}>\n                                <img src={v.src} alt={v.src} />\n                            </Imagewrapper>\n                        ))}\n\n\n                    </Slick>\n\n                </div>\n\n            </SlickWrapper>\n        </Overlay>\n    )\n}\n\n\nImagesZoom.propType ={\n    images:PropTypes.arrayOf(PropTypes.object).isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}