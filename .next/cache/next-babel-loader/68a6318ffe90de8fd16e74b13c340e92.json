{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    margin-top:10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components'; // styled.div 하게 되면 ButtonWrapper는 div태그(div component)가 된다.\n\nvar ButtonWrapper = styled.div(_templateObject());\n_c = ButtonWrapper;\n\nvar LoginForm = function LoginForm() {\n  _s();\n\n  var _useState = useState(''),\n      id = _useState[0],\n      setId = _useState[1];\n\n  var _useState2 = useState(''),\n      password = _useState2[0],\n      setPassword = _useState2[1]; //  컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 사용한다.\n  // 그래야 최적화가 된다. useCallback은 함수를 캐싱해준다.\n\n\n  var onChangeId = useCallback(function (e) {\n    setId(e.target.value);\n  }, []);\n  var onChangePassword = useCallback(function (e) {\n    setPassword(e.target.value);\n  }, []);\n  return __jsx(Form, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, \"\\uB85C\\uADF8\\uC778\"), __jsx(Link, {\n    href: \"/signup\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(LoginForm, \"LA2Te6PREfuQKvFd7F0HoSpYRiI=\");\n\n_c2 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/LoginForm.js"],"names":["React","useState","useCallback","Form","Input","Button","Link","styled","ButtonWrapper","div","LoginForm","id","setId","password","setPassword","onChangeId","e","target","value","onChangePassword"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB,C,CAEA;;AACA,IAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;KAAMD,a;;AAMN,IAAME,SAAS,GAAG,SAAZA,SAAY,GAAK;AAAA;;AAAA,kBAECT,QAAQ,CAAC,EAAD,CAFT;AAAA,MAEZU,EAFY;AAAA,MAERC,KAFQ;;AAAA,mBAGaX,QAAQ,CAAC,EAAD,CAHrB;AAAA,MAGZY,QAHY;AAAA,MAGFC,WAHE,kBAKnB;AACA;;;AACA,MAAMC,UAAU,GAAGb,WAAW,CAAC,UAACc,CAAD,EAAK;AAChCJ,IAAAA,KAAK,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACH,GAF6B,EAE5B,EAF4B,CAA9B;AAKA,MAAMC,gBAAgB,GAAGjB,WAAW,CAAC,UAACc,CAAD,EAAK;AACtCF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAFmC,EAElC,EAFkC,CAApC;AAKA,SACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEP,EAA7B;AAAiC,IAAA,QAAQ,EAAEI,UAA3C;AAAuD,IAAA,QAAQ,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,KAAK,EAAEF,QAFR;AAGC,IAAA,QAAQ,EAAEM,gBAHX;AAIC,IAAA,QAAQ,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,EAiBI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAH,CAArB,CAFJ,CAjBJ,EAsBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBJ,CADJ;AA6BH,CA9CD;;GAAMT,S;;MAAAA,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport {Form, Input, Button} from 'antd';\nimport Link from 'next/link'\nimport styled from 'styled-components';\n\n// styled.div 하게 되면 ButtonWrapper는 div태그(div component)가 된다.\nconst ButtonWrapper = styled.div`\n    margin-top:10px;\n`;\n\n\n\nconst LoginForm = () =>{\n\n    const [id, setId] = useState('');\n    const [password, setPassword] = useState('')\n\n    //  컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 사용한다.\n    // 그래야 최적화가 된다. useCallback은 함수를 캐싱해준다.\n    const onChangeId = useCallback((e)=>{    \n        setId(e.target.value)\n    },[])\n\n\n    const onChangePassword = useCallback((e)=>{    \n        setPassword(e.target.value)\n    },[])\n\n\n    return(\n        <Form>\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <br />\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\n            </div>\n\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <Input name=\"user-password\"\n                 type=\"password\"\n                 value={password} \n                 onChange={onChangePassword} \n                 required />\n            </div>\n\n            <ButtonWrapper>\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}>로그인</Button>\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n            </ButtonWrapper>\n\n            <div>\n                \n            </div>\n        </Form>\n    )\n\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}