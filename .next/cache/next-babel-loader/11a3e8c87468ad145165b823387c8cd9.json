{"ast":null,"code":"import { useState, useCallback } from 'react'; // Custom hook\n\nexport default ((initialValue = null) => {\n  // id\n  const {\n    0: value,\n    1: setValue\n  } = useState(initialValue); // onChangeId \n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n  return [value, handler];\n});","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/hooks/useinput.js"],"names":["useState","useCallback","initialValue","value","setValue","handler","e","target"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC,C,CAEA;;AACA,gBAAe,CAACC,YAAY,GAAG,IAAhB,KAAuB;AAElC;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAOC;AAAP,MAAmBJ,QAAQ,CAACE,YAAD,CAAjC,CAHkC,CAKlC;;AACA,QAAMG,OAAO,GAAGJ,WAAW,CAAEK,CAAD,IAAK;AAC7BF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACH,GAF0B,EAEzB,EAFyB,CAA3B;AAIA,SAAO,CAACA,KAAD,EAAOE,OAAP,CAAP;AACH,CAXD","sourcesContent":["import { useState, useCallback } from 'react';\n\n// Custom hook\nexport default (initialValue = null)=>{\n\n    // id\n    const [value,setValue] = useState(initialValue);\n\n    // onChangeId \n    const handler = useCallback((e)=>{\n        setValue(e.target.value);\n    },[]);\n\n    return [value,handler];\n}"]},"metadata":{},"sourceType":"module"}