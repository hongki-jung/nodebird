{"ast":null,"code":"var _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/LoginForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types'; // styled.div 하게 되면 ButtonWrapper는 div태그(div component)가 된다.\n\nconst ButtonWrapper = styled.div`\n    margin-top:10px;\n`;\nconst FormWrapper = styled(Form)`\n    padding: 10px\n`;\n\nconst LoginForm = ({\n  setIsLoggedIn\n}) => {\n  // Custom Hook 사용전 버전\n  // const [id, setId] = useState('');\n  // const [password, setPassword] = useState('')\n  // //  컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 사용한다.\n  // // 그래야 최적화가 된다. useCallback은 함수를 캐싱해준다.\n  // const onChangeId = useCallback((e)=>{    \n  //     setId(e.target.value)\n  // },[])\n  // const onChangePassword = useCallback((e)=>{    \n  //     setPassword(e.target.value)\n  // },[])\n  //  Custom Hook 사용후 \n  const [id, onChangeId] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const onSubmitForm = useCallback(() => {\n    console.log(id, password);\n    setIsLoggedIn(true);\n  }, [id, password]);\n  return __jsx(FormWrapper, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-id\",\n    value: id,\n    onChange: onChangeId,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(\"label\", {\n    htmlFor: \"user-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    onChange: onChangePassword,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  })), __jsx(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    loading: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \" \\uB85C\\uADF8\\uC778 \"), __jsx(Link, {\n    href: \"/signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 38\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 41\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785\")))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }));\n};\n\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/LoginForm.js"],"names":["React","useState","useCallback","Form","Input","Button","Link","styled","PropTypes","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","onChangeId","useInput","password","onChangePassword","onSubmitForm","console","log","propTypes","func","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,WAAzB,QAA2C,OAA3C;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,MAArB,QAAkC,MAAlC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAGA;;AACA,MAAMC,aAAa,GAAGF,MAAM,CAACG,GAAI;;CAAjC;AAOA,MAAMC,WAAW,GAAEJ,MAAM,CAACJ,IAAD,CAAO;;CAAhC;;AAKA,MAAMS,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAqB;AAEnC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA,QAAM,CAACC,EAAD,EAAIC,UAAJ,IAAkBC,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACC,QAAD,EAAUC,gBAAV,IAA8BF,QAAQ,CAAC,EAAD,CAA5C;AAOA,QAAMG,YAAY,GAAGjB,WAAW,CAAC,MAAI;AACjCkB,IAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ,EAAeG,QAAf;AACAJ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAH+B,EAG9B,CAACC,EAAD,EAAIG,QAAJ,CAH8B,CAAhC;AAOA,SACI,MAAC,WAAD;AAAa,IAAA,QAAQ,EAAEE,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAEL,EAA7B;AAAiC,IAAA,QAAQ,EAAEC,UAA3C;AAAuD,IAAA,QAAQ,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAJJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,MAAC,KAAD;AAAO,IAAA,IAAI,EAAC,eAAZ;AACC,IAAA,IAAI,EAAC,UADN;AAEC,IAAA,KAAK,EAAEE,QAFR;AAGC,IAAA,QAAQ,EAAEC,gBAHX;AAIC,IAAA,QAAQ,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAVJ,EAoBI,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAH,CAArB,CAFJ,CApBJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADJ;AAgCH,CAlED;;AAqEAN,SAAS,CAACU,SAAV,GAAoB;AAChBT,EAAAA,aAAa,EAAEL,SAAS,CAACe,IAAV,CAAeC;AADd,CAApB;AAKA,eAAeZ,SAAf","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport {Form, Input, Button} from 'antd';\nimport Link from 'next/link'\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\n\n// styled.div 하게 되면 ButtonWrapper는 div태그(div component)가 된다.\nconst ButtonWrapper = styled.div`\n    margin-top:10px;\n`;\n\n\n\n\nconst FormWrapper= styled(Form)`\n    padding: 10px\n`;\n\n\nconst LoginForm = ({setIsLoggedIn}) => {\n\n    // Custom Hook 사용전 버전\n    // const [id, setId] = useState('');\n    // const [password, setPassword] = useState('')\n\n    // //  컴포넌트에 props로 넘겨주는 함수는 useCallback을 꼭 사용한다.\n    // // 그래야 최적화가 된다. useCallback은 함수를 캐싱해준다.\n    // const onChangeId = useCallback((e)=>{    \n    //     setId(e.target.value)\n    // },[])\n\n\n    // const onChangePassword = useCallback((e)=>{    \n    //     setPassword(e.target.value)\n    // },[])\n\n\n    //  Custom Hook 사용후 \n    const [id,onChangeId] = useInput('');\n    const [password,onChangePassword] = useInput('')\n    \n\n\n\n\n\n    const onSubmitForm = useCallback(()=>{\n        console.log(id,password);\n        setIsLoggedIn(true);\n    },[id,password]);\n\n\n\n    return(\n        <FormWrapper onFinish={onSubmitForm}>\n            {/* onFinish는 이미 preventDefault가 적용되어 있다.\n            submit이되면 onFinish가 호출된다.\n            */}\n            <div>\n                <label htmlFor=\"user-id\">아이디</label>\n                <br />\n                <Input name=\"user-id\" value={id} onChange={onChangeId} required/>\n            </div>\n\n            <div>\n                <label htmlFor=\"user-password\">비밀번호</label>\n                <br />\n                <Input name=\"user-password\"\n                 type=\"password\"\n                 value={password} \n                 onChange={onChangePassword} \n                 required />\n            </div>\n\n            <ButtonWrapper>\n                <Button type=\"primary\" htmlType=\"submit\" loading={false}> 로그인 </Button>\n                <Link href=\"/signup\"><a><Button>회원가입</Button></a></Link>\n            </ButtonWrapper>\n\n            <div>\n                \n            </div>\n        </FormWrapper>\n    )\n\n}\n\n\nLoginForm.propTypes={\n    setIsLoggedIn: PropTypes.func.isRequired,\n}\n\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}