{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/AppLayout.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types'; // 프롭스 검사\n\nimport Link from 'next/link'; // AppLayout으로 감싸지는 것들이 children이 된다.\n\nvar AppLayout = function AppLayout(_ref) {\n  var children = _ref.children;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 28\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\")), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 28\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\")), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 28\n    }\n  }, \"\\uB178\\uB4DC\\uBC84\\uB4DC\")), children);\n};\n\n_c = AppLayout;\nAppLayout.propTypes = {\n  // children은 노드 타입이다 (리액트의 노드. 리턴안에 들어갈 수 있는 모든 것들이 노드)\n  children: PropTypes.node.isRequired\n};\nexport default AppLayout;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppLayout\");","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/AppLayout.js"],"names":["React","PropTypes","Link","AppLayout","children","propTypes","node","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAAoC;;AACpC,OAAOC,IAAP,MAAiB,WAAjB,C,CAIC;;AACD,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAe;AAAA,MAAbC,QAAa,QAAbA,QAAa;AAC7B,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAf,CAFJ,EAGI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAf,CAHJ,EAII,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAf,CAJJ,EAKKA,QALL,CADJ;AASH,CAVD;;KAAMD,S;AAYNA,SAAS,CAACE,SAAV,GAAsB;AAClB;AACAD,EAAAA,QAAQ,EAAEH,SAAS,CAACK,IAAV,CAAeC;AAFP,CAAtB;AAKA,eAAeJ,SAAf","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'; // 프롭스 검사\nimport Link from 'next/link';\n\n\n\n // AppLayout으로 감싸지는 것들이 children이 된다.\nconst AppLayout = ({children}) =>{\n    return (\n        <div>\n                \n            <Link href=\"/\"><a>노드버드</a></Link>\n            <Link href=\"/\"><a>노드버드</a></Link>\n            <Link href=\"/\"><a>노드버드</a></Link>\n            {children}\n        </div>\n    )\n}\n\nAppLayout.propTypes = {\n    // children은 노드 타입이다 (리액트의 노드. 리턴안에 들어갈 수 있는 모든 것들이 노드)\n    children: PropTypes.node.isRequired,\n\n};\nexport default AppLayout\n"]},"metadata":{},"sourceType":"module"}