{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/PostCard.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport PostImages from './PostImages'; // post는 부모( /pages/index.js)로부터 받아온다\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me; // const id = me && me.id;\n\n\n  var id = me === null || me === void 0 ? void 0 : me.id;\n  var onToggleLike = useCallback(function () {}, []);\n  return __jsx(\"div\", {\n    style: {\n      marginButtom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Image[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 41\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 33\n        }\n      }, \" \\uC218\\uC815 \"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 29\n        }\n      }, \" \\uC2E0\\uACE0 \")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })));\n};\n\n_s(PostCard, \"iO0HrzuWIOrYduE9I4XJS/uvhUk=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.PropTypes = {\n  // post: PropTypes.object.isRequired\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/jeonghong-gi/Desktop/nodebird/prepare/front/components/PostCard.js"],"names":["React","useState","useCallback","PropTypes","useSelector","Card","Popover","Button","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","HeartTwoTone","PostImages","PostCard","post","liked","setLiked","commentFormOpened","setCommentFormOpened","state","user","me","id","onToggleLike","marginButtom","Image","Images","User","nickname","content","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import React, {useState, useCallback} from 'react';\nimport PropTypes from 'prop-types';\nimport {useSelector} from 'react-redux';\nimport {Card, Popover, Button, Avatar} from 'antd';\nimport {RetweetOutlined ,HeartOutlined, MessageOutlined, EllipsisOutlined, HeartTwoTone} from '@ant-design/icons';\n\nimport PostImages from './PostImages';\n\n// post는 부모( /pages/index.js)로부터 받아온다\nconst PostCard = ({post}) =>{\n\n\n    const [liked,setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] =useState(false);\n\n    const { me } =useSelector((state)=>state.user);\n    // const id = me && me.id;\n    const id = me?.id;\n    \n    const onToggleLike = useCallback(()=>{\n\n    },[]);\n\n    return(\n        <div style={{marginButtom:20}}>\n  \n            <Card\n                cover={post.Image[0] && <PostImages images={post.Images}/>}    \n\n                actions={[\n                    <RetweetOutlined key=\"retweet\"/>,\n\n                    liked \n                        ?   <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike}/>\n                        :  <HeartOutlined key=\"heart\" onClick={onToggleLike}/>,\n                    \n                    <MessageOutlined key=\"comment\"/>,\n                    <Popover key=\"more\" content={(\n                    <Button.Group>\n                        { id && post.User.id === id ? (\n                            <>\n                                <Button> 수정 </Button>\n                                <Button type=\"danger\">삭제</Button>\n                            </>\n                        ) : <Button> 신고 </Button>}\n                    </Button.Group>  \n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n            >\n   \n                <Card.Meta \n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={post.content}\n                />\n               \n            </Card>\n            {/* <CommentForm />\n            <Comments /> */}\n\n        </div>\n    )\n};\n\n\nPostCard.PropTypes ={\n    // post: PropTypes.object.isRequired\n\n    post:PropTypes.shape({\n        id:PropTypes.number,\n        User:PropTypes.object,\n        content:PropTypes.string,\n        createdAt:PropTypes.object,\n        Comments: PropTypes.arrayOf(PropTypes.object),\n        Images: PropTypes.arrayOf(PropTypes.object),\n\n    }).isRequired,\n\n};\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}